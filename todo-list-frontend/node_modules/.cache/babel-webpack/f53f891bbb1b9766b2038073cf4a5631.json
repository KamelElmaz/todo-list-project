{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./todo.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./progress-bar/progress-bar.component\";\nimport * as i5 from \"./todo-item/todo-item.component\";\n\nfunction AppComponent_app_progress_bar_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-progress-bar\");\n  }\n}\n\nfunction AppComponent_app_todo_item_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-todo-item\", 7);\n    i0.ɵɵlistener(\"removeTodo\", function AppComponent_app_todo_item_8_Template_app_todo_item_removeTodo_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.handleRemove($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const todo_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"item\", todo_r3);\n  }\n}\n\nfunction AppComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.notification, \" \");\n  }\n}\n\nexport class AppComponent {\n  constructor(todoService) {\n    this.todoService = todoService;\n    this.todos = [];\n    this.loading = true;\n    this.searchControl = new FormControl('');\n    this.notification = null;\n    this.todosSubject = new BehaviorSubject([]); // Fetch todos from the service\n\n    this.todoService.getAll().subscribe({\n      next: data => {\n        this.todos = data;\n        this.todosSubject.next(data); // Populate initial data\n\n        this.loading = false;\n      },\n      error: () => {\n        this.loading = false;\n        console.error('Failed to load todos');\n      }\n    }); // Filter todos based on search input\n\n    this.filteredTodos$ = this.todosSubject.pipe(map(todos => {\n      var _a;\n\n      const searchText = ((_a = this.searchControl.value) === null || _a === void 0 ? void 0 : _a.toLowerCase()) || '';\n      return searchText ? todos.filter(todo => todo.task.toLowerCase().includes(searchText)) : todos;\n    }));\n  }\n\n  handleRemove(todoId) {\n    this.todoService.remove(todoId).subscribe({\n      next: () => {\n        this.todos = this.todos.filter(todo => todo.id !== todoId);\n        this.todosSubject.next(this.todos);\n        this.showNotification('TODO removed successfully!');\n      },\n      error: () => {\n        this.showNotification('Failed to remove TODO. Please try again.');\n      }\n    });\n  }\n\n  showNotification(message) {\n    this.notification = message;\n    setTimeout(() => {\n      this.notification = null;\n    }, 3000);\n  }\n\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.TodoService));\n};\n\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 11,\n  vars: 6,\n  consts: [[1, \"title\"], [1, \"list\"], [\"for\", \"search\"], [\"id\", \"search\", \"type\", \"text\", 3, \"formControl\"], [4, \"ngIf\"], [3, \"item\", \"removeTodo\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"notification\", 4, \"ngIf\"], [3, \"item\", \"removeTodo\"], [1, \"notification\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"h1\");\n      i0.ɵɵtext(2, \"A list of TODOs\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1);\n      i0.ɵɵelementStart(4, \"label\", 2);\n      i0.ɵɵtext(5, \"Search...\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 3);\n      i0.ɵɵtemplate(7, AppComponent_app_progress_bar_7_Template, 1, 0, \"app-progress-bar\", 4);\n      i0.ɵɵtemplate(8, AppComponent_app_todo_item_8_Template, 1, 1, \"app-todo-item\", 5);\n      i0.ɵɵpipe(9, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, AppComponent_div_10_Template, 2, 1, \"div\", 6);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formControl\", ctx.searchControl);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(9, 4, ctx.filteredTodos$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.notification);\n    }\n  },\n  directives: [i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlDirective, i3.NgIf, i3.NgForOf, i4.ProgressBarComponent, i5.TodoItemComponent],\n  pipes: [i3.AsyncPipe],\n  styles: [\".title[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\n.list[_ngcontent-%COMP%] {\\n  width: 1000px;\\n  margin: auto;\\n}\\n\\ninput[type=text][_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 12px 20px;\\n  margin: 8px 0 0;\\n  box-sizing: border-box;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0VBQ0EsWUFBQTtBQUNGOztBQUVBO0VBQ0UsV0FBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLHNCQUFBO0FBQ0YiLCJmaWxlIjoiYXBwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRpdGxlIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4ubGlzdCB7XG4gIHdpZHRoOiAxMDAwcHg7XG4gIG1hcmdpbjogYXV0bztcbn1cblxuaW5wdXRbdHlwZT10ZXh0XSB7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAxMnB4IDIwcHg7XG4gIG1hcmdpbjogOHB4IDAgMDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cbiJdfQ== */\"]\n});","map":{"version":3,"sources":["/Users/kamel/Downloads/todo-list/todo-list-frontend/src/app/app.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component } from '@angular/core';\nimport { Todo, TodoService } from './todo.service';\nimport { FormControl } from '@angular/forms';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <div class=\"title\">\n      <h1>A list of TODOs</h1>\n    </div>\n    <div class=\"list\">\n      <label for=\"search\">Search...</label>\n      <input id=\"search\" type=\"text\" [formControl]=\"searchControl\">\n      <app-progress-bar *ngIf=\"loading\"></app-progress-bar>\n      <app-todo-item\n          *ngFor=\"let todo of filteredTodos$ | async\"\n          [item]=\"todo\"\n          (removeTodo)=\"handleRemove($event)\">\n      </app-todo-item>\n    </div>\n    <div class=\"notification\" *ngIf=\"notification\">\n      {{ notification }}\n    </div>\n  `,\n  styleUrls: ['app.component.scss']\n})\nexport class AppComponent {\n  todos: Todo[] = [];\n  filteredTodos$: Observable<Todo[]>;\n  loading: boolean = true;\n  searchControl = new FormControl('');\n  notification: string | null = null;\n\n  private todosSubject = new BehaviorSubject<Todo[]>([]);\n\n  constructor(private todoService: TodoService) {\n    // Fetch todos from the service\n    this.todoService.getAll().subscribe({\n      next: (data) => {\n        this.todos = data;\n        this.todosSubject.next(data); // Populate initial data\n        this.loading = false;\n      },\n      error: () => {\n        this.loading = false;\n        console.error('Failed to load todos');\n      }\n    });\n\n    // Filter todos based on search input\n    this.filteredTodos$ = this.todosSubject.pipe(\n        map((todos) => {\n          const searchText = this.searchControl.value?.toLowerCase() || '';\n          return searchText\n              ? todos.filter((todo) =>\n                  todo.task.toLowerCase().includes(searchText)\n              )\n              : todos;\n        })\n    );\n  }\n\n  handleRemove(todoId: number) {\n    this.todoService.remove(todoId).subscribe({\n      next: () => {\n        this.todos = this.todos.filter((todo) => todo.id !== todoId);\n        this.todosSubject.next(this.todos);\n        this.showNotification('TODO removed successfully!');\n      },\n      error: () => {\n        this.showNotification('Failed to remove TODO. Please try again.');\n      }\n    });\n  }\n\n  private showNotification(message: string) {\n    this.notification = message;\n    setTimeout(() => {\n      this.notification = null;\n    }, 3000);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}